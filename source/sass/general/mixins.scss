@use 'sass:math';

@mixin dfc {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin dfcs {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin pseudo {
  position: absolute;
  content: '';
}

@mixin max-w($media) {
  @media only screen and (max-width: $media) {
    @content;
  }
}

@mixin min-w($media) {
  @media only screen and (min-width: $media) {
    @content;
  }
}

@function rem($pixel) {
  @return math.div($pixel, 16) + rem;
}

@mixin center() {
  top: 50%;
  left: 50%;

  transform: translate(-50%, -50%);
}

@mixin fl($direction, $align, $gap) {
  display: flex;
  flex-direction: $direction;

  grid-gap: $gap;
  @if $align {
    align-items: $align;
  }
}

@mixin hover {
  @media (hover: hover) and (pointer: fine) {
    @content;
  }
}

@mixin tr($transition, $prop) {
  @if $transition == 100 {
    transition: 100ms $prop;
  }
  @if $transition == 200 {
    transition: 200ms $prop;
  }
  @if $transition == 300 {
    transition: 300ms $prop;
  }
  @if $transition == 400 {
    transition: 400ms $prop;
  }
  @if $transition == 500 {
    transition: 500ms $prop;
  }
}

@mixin m($direction, $value) {
  @if $direction == t {
    margin-top: $value;
  }
  @if $direction == b {
    margin-bottom: $value;
  }
  @if $direction == l {
    margin-left: $value;
  }
  @if $direction == r {
    margin-right: $value;
  }
}

@mixin hide-text($line) {
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: $line;
  overflow: hidden;
  word-break: break-all;
}

@mixin clip-text($w) {
  max-width: $w;

  overflow: hidden;
  text-overflow: ellipsis;

  white-space: nowrap;
}

@mixin z-1 {
  z-index: 1;
}
@mixin z-2 {
  z-index: 2;
}
@mixin z-3 {
  z-index: 3;
}
@mixin z-4 {
  z-index: 4;
}
@mixin z-5 {
  z-index: 5;
}
@mixin z-6 {
  z-index: 6;
}

@mixin m-a {
  margin-left: auto;
  margin-right: auto;
}

@mixin arrow($bg) {
  --arrow-shape: polygon(50% 100%, 0 0, 100% 0);

  clip-path: var(--arrow-shape);

  width: var(--arrow-w);
  height: var(--arrow-h);

  background-color: $bg;

  @include tr(200, ease);

  display: block;
}

@mixin mq($condition, $value) {
  $size: map-get($media, $value);

  @if $condition == max {
    @media only screen and (max-width: $size) {
      @content;
    }
  }
  @if $condition == min {
    @media only screen and (min-width: $size) {
      @content;
    }
  }
}

@mixin touch {
  @media (hover: none) and (pointer: coarse) {
    @content;
  }
}

@mixin text-gradient {
  background-clip: text;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
}
